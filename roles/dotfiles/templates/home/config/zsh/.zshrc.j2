#jinja2:variable_start_string:'@=', variable_end_string:'=@', block_start_string:'@@', block_end_string:'@@', comment_start_string:'@#', comment_end_string:'#@'
# @= ansible_managed =@

if [[ "$ZPROF" = true ]]; then
    zmodload zsh/zprof
fi

# initial Zinit's hash definition, if configuring before loading Zinit, and then:
declare -A ZINIT
ZINIT[HOME_DIR]="$ZDOTDIR/zinit"
ZINIT[BIN_DIR]="$ZINIT[HOME_DIR]/bin"
### Added by Zinit's installer
if [[ ! -f "${ZINIT[BIN_DIR]}/zinit.zsh" ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing DHARMA Initiative Plugin Manager (zdharma/zinit)…%f"
    command mkdir -p "${ZINIT[HOME_DIR]}" && command chmod g-rwX "${ZINIT[HOME_DIR]}"
    command git clone https://github.com/zdharma/zinit "${ZINIT[BIN_DIR]}" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f" || \
        print -P "%F{160}▓▒░ The clone has failed.%f"
fi
source "${ZINIT[BIN_DIR]}/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit
if [[ ! -f "${ZINIT[BIN_DIR]}/zmodules/Src/zdharma/zplugin.so" ]]; then
    zinit module build
fi
### End of Zinit installer's chunk

# A binary Zsh module which transparently and automatically compiles sourced scripts
module_path+=( "${ZINIT[BIN_DIR]}/zmodules/Src" )
zmodload zdharma/zplugin &>/dev/null

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.config/zsh/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

() {{
    # Functions to make configuration less verbose
    # zt() : First argument is a wait time and suffix, ie "0a". Anything that doesn't match will be passed as if it were an ice mod. Default ices depth'3' and lucid
    zt(){
        zinit depth'1' lucid ${1/#[0-9][a-c]/wait"${1}"} "${@:2}";
    }

    ##################
    #    Annexes     #
    # Config source  #
    #     Prompt     #
    ##################
    local early=(
        # Load any plugin specific settings, these are all variable settings, so we load them first
        pick'index.zsh'
            $ZDOTDIR/config.d
        # for the sbin ice
        @zinit-zsh/z-a-bin-gem-node
        # And then the powerlevel10k prompt, with fast gitstatus, config is in $ZDOTDIR/config.d/purepower.zsh
        @romkatv/powerlevel10k
    )

    ######################
    # Trigger-load block #
    ######################
    local triggers=(
        trigger-load'!x' svn
            OMZ::plugins/extract
    )

    ##################
    # Wait'0a' block #
    ##################
    local wait0a=(
        as'completion' blockf
            $ZDOTDIR/completions.d
        ver'develop' atload'!_zsh_autosuggest_start'
            @zsh-users/zsh-autosuggestions

        # fzf the fuzzy finder
        multisrc'shell/{completion,key-bindings}.zsh' blockf trackbinds bindmap'^T -> \\ef'
            @junegunn/fzf
        id-as'fzf-bin'
        from'gh-r' bpick'*linux*amd64*'
        as'null' sbin'fzf'
            @junegunn/fzf

        # exa the better ls
        from'gh-r' bpick'*linux*x86_64*musl*'
        mv'completions/exa.zsh -> completions/_exa.zsh'
        fbin'bin/exa -> ls'
        sbin'bin/exa'
            @ogham/exa

        # fd the better find
        from'gh-r' bpick'*x86_64*linux*musl*' sbin'*/fd'
            @sharkdp/fd

        # ripgrep the better grep
        from'gh-r' bpick'*x86_64*linux*musl*' sbin'*/rg'
            @BurntSushi/ripgrep

        # bat the better cat
        from'gh-r' bpick'*x86_64*linux*musl*' sbin'*/bat'
            @sharkdp/bat

        # change zsh completion to use fzf
        blockf atload'[[ -f modules/Src/aloxaf/fzftab.so ]] || build-fzf-tab-module'
            @Aloxaf/fzf-tab
    )

    ##################
    # Wait'0b' block #
    ##################
    local wait0b=(
        pick'index.zsh'
            $ZDOTDIR/extra.d
    )

    ##################
    # Wait'0c' block #
    ##################
    local wait0c=(
        atinit"ZINIT[COMPINIT_OPTS]=-C; zicompinit; zicdreplay"
            @zdharma/fast-syntax-highlighting
    )

    ##################
    # Actual loading #
    ##################
    zt light-mode for "${early[@]}"
    zt light-mode for "${triggers[@]}"
    zt 0a light-mode for "${wait0a[@]}"
    zt 0b light-mode for "${wait0b[@]}"
    zt 0c light-mode for "${wait0c[@]}"
} always {
    unfunction zt
}}

if [[ "$ZPROF" = true ]]; then
    zprof
fi
