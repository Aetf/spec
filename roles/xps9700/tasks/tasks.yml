---
- name: "NVIDIA GPU"
  import_tasks: nvidia.yml

- name: "Fingerprint reader"
  block:
    - name: "Install fprint-tod and xps binary driver"
      include_role:
        name: aur-install
      vars:
        aur_packages:
          - libfprint-tod-git
          - libfprint-2-tod1-xps9300-bin
    - name: "Mark libfprint-tod-git as deps"
      shell:
        cmd: "pacman -Qdq libfprint-tod-git || pacman -D --asdeps libfprint-tod-git"
      register: libfprint_tod_git_result
      changed_when: "libfprint_tod_git_result.stdout is search('install reason has been set')"
    - name: "Install fprintd DBUS service"
      pacman:
        name: fprintd
        state: present
- name: "Correct camera device node assignment"
  block:
    - name: "Install udev rules for the camera"
      copy:
        src: "etc/udev/rules.d/83-webcam.rules"
        dest: "/etc/udev/rules.d"
        mode: "0644"
- name: "Soundwire audio driver"
  block:
    - name: "Install sof-firmware for audio device"
      pacman:
        name: sof-firmware
        state: present
- name: "SD card reader driver"
  include_role:
    name: aur-install
  vars:
    aur_packages:
      - rts_bpp-dkms-git

- name: "Window Hellow camera"
  block:
    - name: "Install howdy"
      include_role:
        name: aur-install
      vars:
        aur_packages:
          - howdy
    - name: "Show notice when face detection is attempted"
      lineinfile:
        path: /usr/lib/security/howdy/config.ini
        insertafter: '\[core\]'
        regexp: '^detection_notice\b'
        line: 'detection_notice = true'
        state: present
    - name: "Use the IR sensor for face detection"
      lineinfile:
        path: /usr/lib/security/howdy/config.ini
        insertafter: '\[core\]'
        regexp: '^device_path\b'
        line: 'device_path = /dev/cams/builtin-ir'
        state: present
    - name: "Disable snapshots"
      lineinfile:
        path: /usr/lib/security/howdy/config.ini
        regexp: '^capture_(\w+)'
        backrefs: yes
        line: 'capture_\1 = false'
        state: present

- name: "Energy consumption"
  block:
    - name: "Install tlp and cpupower"
      pacman:
        name:
          - cpupower
          - tlp
          # also control radio device from TLP
          - tlp-rdw
        state: present
    - name: "Install plasma-pstate plasmoid"
      include_role:
        name: aur-install
      vars:
        aur_packages:
          - plasma5-applets-plasma-pstate
      tags:
        - gui
    - name: "Enable tlp service"
      systemd:
        name: tlp.service
        enabled: yes
        state: started
    # tlp-rdw is used to manage radio devices
    - name: "Mask {{ item }}"
      systemd:
        name: "{{ item }}"
        masked: yes
        state: stopped
      loop:
        - systemd-rfkill.socket
        - systemd-rfkill.service
    - name: "Create TLP configurations"
      include_role:
        name: template-install
      vars:
        src_config_home: "etc/tlp.d"
        dest_config_home: "/etc/tlp.d"

- name: "Disable audit in dmesg"
  template:
    src: etc/dracut.conf.d/cmdline.d/disable-audit.conf.j2
    dest: /etc/dracut.conf.d/cmdline.d/disable-audit.conf
  notify:
    - rebuild unified kernel images

- name: "Enable S3 deep sleep"
  template:
    src: etc/dracut.conf.d/cmdline.d/s3-sleep.conf.j2
    dest: /etc/dracut.conf.d/cmdline.d/s3-sleep.conf
  notify:
    - rebuild unified kernel images

- name: "Disable unused dracut modules to reduce noise"
  template:
    src: etc/dracut.conf.d/unused-modules.conf.j2
    dest: /etc/dracut.conf.d/unused-modules.conf
  notify:
    - rebuild unified kernel images
